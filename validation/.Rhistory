print("You are quite close to winning a Badge. Keep working hard.")
}
A_upvotes <- c(7, 3, 2, 8, 0, 4)
if(mean(A_upvotes) >= 4)
{
print("Congratulations, you won the Popular Badge")
}
else if(mean(A_upvotes) >= 3)
{
print("You are quite close to winning a Badge. Keep working hard.")
}
1:99
c(1:3,5:9)
4%%6
help(%%)
help(%%)
40%%6
“Hero” + “Hiralal”
hero + hari
paste("Hero", "Hiralal")
paste("Hero", "Hiralal", sep="")
paste("Hello", "world", sep=" ")
vector1 <- c(1,2,3,3,4,5,5,5,"a")
vector2 <- c(1,2,3,3,4,5,5,5,T)
vector3 <- c(T,T,F,T,"a","r")
vector4 <- c(vector1, vector2, vector3)
typeof(vector4)
typeof(vector1)
typeof(vector2)
typeof(vector3)
gender-> c("m", "f", "m", "m", "f", "m")
gender <-c("m", "f", "m", "m", "f", "m")
summary(gender)
as.factor(gender)
str(gender)
str(as.factor(gender))
view(as.factor(gender))
age <- c( 18, 25, 21, 19, 50)
income <- c(20000, 40000, 30000, 45000, 60000)
balance <-c(5000, 12000, 23000, 14000, 6000)
matrix(c(age, income, balance), nrow=5, ncol=3)
matrix(c(age, income, balance), nrow=5, ncol=3, byrow=T)
help(rbind)
name <- c("Meena", "Teena", "Kiran", "Nitin", "Harpreet", "Shaikh")
age <- c(23, 34, 26, 28, 25,18)
majorsubject <- c("Maths","English", "Science", "English", "Science", "Maths")
pass <- c(TRUE, TRUE, FALSE, FALSE, TRUE, FALSE)
gender <- c("Female", "Female", "Male", "Male", "Female", "Male")
overallpercentage<- c(54, 67, 46, 59, 64, 48)
data <- data.frame(gender, overallpercentage)
students <- cbind(students, data)
students <- data.frame(name, age, majorsubject, pass)
students <- cbind(students, data)
name <- c("Kunal", "Hema", "Mohini", "Preet", "Myra", "Salma")
age<- c(26, 34, 28, 19, 25, 32)
majorsubject <- c("Science", "Maths","English", "Hindi", "Maths", "Maths")
pass <- c(FALSE,TRUE, FALSE,TRUE, TRUE, FALSE)
gender <- c("Male", "Female", "Female", "Male", "Female", "Female")
overallpercentage<- c(38, 67, 53, 62, 68, 53 )
students2 <- data.frame(name,age,majorsubject,pass,gender,overallpercentage)
finaldata <- rbind(students, students2)
summary(finaldata)
finaldata[4,1]
finaldata[4,1] <- "Nitish"
finaldata <- rbind(students, students2)
students_fail <- finaldata[c(3,4,6,7,9,12), c(1,6)]
summaer(students_fail)
summary(students_fail)
if (marks >=90) {
grade <- "A"
print(grade)
} else if (marks>=80){
grade <- "B"
print(grade)
} else if (marks>=70) {
grade <- "C"
print(grade)
} else if (marks>=60) {
grade <- "D"
print(grade)
} else if (marks>=50) {
grade <- "E"
print(grade)
} else {
grade <-"F"
print(grade)
}
marks <- c(82, 59, 45, 90, 71)
if (marks >=90) {
grade <- "A"
print(grade)
} else if (marks>=80){
grade <- "B"
print(grade)
} else if (marks>=70) {
grade <- "C"
print(grade)
} else if (marks>=60) {
grade <- "D"
print(grade)
} else if (marks>=50) {
grade <- "E"
print(grade)
} else {
grade <-"F"
print(grade)
}
view(as.factor(gender))
view(mtcars)
str(mtcars)
score=mpghp/wt
score=mpg.hp/wt
zcars <-data.frame(mtcars)
score <- mtcars$mpg.mtcars$hp/mtcars$wt
view(score)
summary(score)
score <- mtcars$mpg*mtcars$hp/mtcars$wt
summary(score)
s <-c(score)
cars <- cbind(zcars,score)
mean(score)
performance <- vector(mode="character", length=l)
length(cars)
performance <- vector(mode="character", length=12)
for(i in cars$score)
if (score >= mean(score))
for(i in cars$score){}
for(i in cars$score){
for(score in cars()){
for( i in nrow(cars))
for(i in 1:nrow(cars))
{}
for(i in 1:nrow(cars))
{
if (score >= mean(score))
{}
{
performance <- "good"
{
for ( i in 1: nrow(cars))
{
if(score >= mean(score))
{
performance <- 'good'
}
else {
performace <- 'average'
}
}
warnngs()
warnings()
for ( i in 1: nrow(cars))
{
if(score[i] >= mean(score))
{
performance <- 'good'
}
else {
performace <- 'average'
}
}
str(performance)
summary(performance)
for ( i in 1: nrow(cars))
{
if(score[i] >= mean(score))
{
performance[i] <- 'good'
}
else {
performace[i] <- 'average'
}
}
str(performance)
p <- data.frame(performance)
summary(p)
p <- data.frame(performace)
summary(p)
for ( i in 1: nrow(cars))
{
if(score[i] >= mean(score))
{
performance[i] <- 'good'
}
else {
performance[i] <- 'average'
}
}
p <- data.frame(performace)
summary(p)
p <- data.frame(performance)
summary(p)
help(nchar)
help(lapply)
typeof(c("2", "3", "4"))
p <- c("2", "3", "4") + c(2,3,5)
matrix(1:6, 2, ,TRUE)
matrix(1:6, 2, ,FALSE)
matrix(1:6, 3, 2)
matrix(1:6, 2, 3)
?sapply
?sapply
my-df <- (1,5,6,7,8)
my_df <- (1,5,6,7,8)
my_df <- c(1,5,6,7,8)
data.frame(sapply(my_df[ ,1:nrow(my_df)], factor))
data.frame(sapply(my_df[ ,1:ncol(my_df)], factor))
data.frame(sapply(my_df[ ,nrow(my_df)], factor))
for (i in 1:nrow(my_df))
{
My_df[i, ] <- factor(my_df[i, ])
}
x <- 8
f <- function() {
y <- x+2
return(c(x, y))
}
f()
f <- function() {
x <- 8
y <- x+2
return(c(x, y))
}
y
5/6
A <- c(5,4,1,3,8,1)
length(which(A == 1))
length(which(A = 1))
?name
?name
?names
?column.names
names(cars)
mtcars[2:3, ]
mtcars[c(2,3), ]
mtcars[seq(2,3), ]
mtcars[seq(2,3,1), ]
clear()
bye()
n <- nrow(bollywood)
last_10 <- bollywood$Movie[(n-9):n]
last_10
source('C:/Users/keerthana/Desktop/UPGRAD/case_study.R')
source('C:/Users/keerthana/Desktop/UPGRAD/case_study.R')
source('C:/Users/keerthana/Desktop/UPGRAD/case_study.R')
source('C:/Users/keerthana/Desktop/UPGRAD/case_study.R')
iris <- iris
View(iris)
str(iris)
plot(iris$Sepal.Length,iris$Sepal.Width)
points(iris$Sepal.Length,iris$Sepal.Width,col = species)
points(iris$Sepal.Length,iris$Sepal.Width,col = "species")
points(iris$Sepal.Length,iris$Sepal.Width,col = species)
points(iris$Sepal.Length,iris$Sepal.Width,col = red)
points(iris$Sepal.Length,iris$Sepal.Width,col = "red")
plot(iris$Sepal.Length,iris$Sepal.Width,col = iris$Species)
hist(iris$Sepal.Width)
type(hist)
hist(iris$Petal.Width)
boxplot(iris$Petal.Length)
t1 <- hist(iris$Petal.Width)
t2 <- hist(iris$Sepal.Width)
par(mfrow)
par(mfrow= c(t1,t2))
t3 <- par(mfrow= c(t1,t2))
par(mfrow= c(t1,t2))
i <- InsectSprays
View(i)
boxplot(i$count)
a <- filter(i$spray == "A")
a <- filter(i,i$spray == "A")
library(dplyr)
a <- filter(i,i$spray == "A")
View(a)
b <- filter(i,i$spray == "B")
c <- filter(i,i$spray == "C")
d <- filter(i,i$spray == "D")
e <- filter(i,i$spray == "E")
f <- filter(i,i$spray == "F")
boxplot(a$count)
boxplot(b$count)
boxplot(c$count)
boxplot(d$count)
boxplot(e$count)
boxplot(f$count)
boxplot(i$count~i$spray)
library(ggplot2)
cars <- mtcars
library(ggplot)
test <- ggplot(cars,aes(x=cyl,y=mpg) + geom_point())
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(ggplot)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
test <- ggplot(cars,aes(x=cyl,y=mpg) + geom_point())
test <- ggplot(cars,aes(x=cyl,y=mpg)) + geom_point()
ggplot(cars,aes(x=cyl,y=mpg)) + geom_point()
ggplot(cars,aes(x=factor(cyl),y=mpg)) + geom_point()
View(cars)
ggplot(cars,aes(x=factor(am),y=mpg)) + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, col = factor(cyl))) + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, col = cyl)) + geom_point()
ggplot(mtcars, aes(x = mpg,y = factor(cyl)) + geom_point()
ggplot(mtcars, aes(x = mpg,y = factor(cyl))) + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, col = factor(cyl))) + geom_point(size = 3, shape = 1)
ggplot(mtcars, aes(x = wt,y = mpg, col = factor(cyl))) + geom_point(size = 3, shape = 2)
ggplot(mtcars, aes(x = wt,y = mpg, col = factor(cyl))) + geom_point(size = 3, shape = 3)
ggplot(mtcars, aes(x = wt,y = mpg, col = factor(cyl))) + geom_point(size = 3, shape = 4)
ggplot(mtcars, aes(x = wt,y = mpg, col = factor(cyl))) + geom_point(size = 3, shape = 5)
ggplot(mtcars, aes(x = wt,y = mpg, color = blues9) + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, color = blue) + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, colour = blue) + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, color = "blue") + geom_point()
ggplot(mtcars, aes(x = wt,y = mpg, colour = "blue") + geom_point()
ggplot(cars, aes(x=wt, y=mpg, size= disp,col = hp)) + geom_point()
plantdata <- co2
?CO2
str(plantdata)
plot(plantdata$uptake, plantdata$conc, col = plantdata$type)
plot(uptake, plantdata$conc, col = plantdata$type)
plot(plantdata$uptake, plantdata$conc, col = plantdata$type)
plot(plantdata[uptake], plantdata[conc], col = plantdata["type"])
plot(plantdata["uptake"], plantdata["conc], col = plantdata["type"])
plot(plantdata["uptake"], plantdata["conc"], col = plantdata["type"])
plantd <- as.data.frame(plantdata)
plot(plantdata$uptake, plantdata$conc, col = plantdata$type)
plot(plantd$uptake, plantd$conc, col = plantd$type)
View(plantd)
plantdata <- as.factor(Co2)
plantdata <- as.factor(C02)
plantdata <- as.factor(CO2)
plantdata <- as.array(CO2)
plantdata <- as.table(CO2)
plantdata <- as.factor(CO2)
plantdata <- as.factor(unlist(CO2))
plot(plantdata$uptake, plantdata$conc, col = plantdata$type)
plantdata <- as.data.frame(unlist(CO2))
View(plantdata)
plantdata <- CO2
View(plantdata)
plot(plantdata$uptake, plantdata$conc, col = plantdata$type)
plot(plantdata$uptake, plantdata$conc)
plot(plantdata$uptake, plantdata$conc , col = Type)
plot(plantdata$uptake, plantdata$conc , col = plantdata$Type)
plantdata <- co2
str(plantdata)
plantdata <- CO2
plot(plantdata$uptake, plantdata$conc , col = plantdata$Type)
boxplot(plantdata$uptake,plantdata$Plant)
boxplot(plantdata$uptake)
boxplot(plantdata$uptake,plantdata$Plant,plantdata$Type,plantdata$Treatment)
hist(plantdata$uptake[plantdata$Type == "Mississippi"])
hist(plantdata$uptake[plantdata$Type == "Quebec"])
par(mfrow)
par(plantdata$uptake)
par(plantdata$Type)
par(mfrow = c(1,2))
hist(plantdata$uptake[plantdata$Type == "Mississippi"])
hist(plantdata$uptake[plantdata$Type == "Quebec"])
ggplot(plantdata, aes(x = uptake, y =  conc, shape = type, col = treatment)) + geom_point(size = 1)
library(ggplot2)
ggplot(plantdata, aes(x = uptake, y =  conc, shape = type, col = treatment)) + geom_point(size = 1)
ggplot(plantdata, aes(x = uptake, y =  conc, shape = Type, col = treatment)) + geom_point(size = 1)
ggplot(plantdata, aes(x = uptake, y =  conc, shape = Type, col = Treatment)) + geom_point(size = 1)
ggplot(plantdata, aes(x = uptake, y =  conc, shape = Type, col = Treatment)) + geom_point(size = Type)
ggplot(plantdata, aes(x = uptake, y =  conc, shape = Type, col = Treatment)) + geom_point(size = 4)
source('C:/Users/keerthana/Downloads/Practice Questions - Visualisation using base package.R')
plot(plantdata$uptake, plantdata$conc , col = plantdata$Type)
iris <- iris
View(iris)
ggplot(iris, aes(x= Petal.Length, y= Sepal.Length, shape = Species)) + geom_point()
ggplot(iris, aes(x= Petal.Length, y= Sepal.Length, col = Species)) + geom_point()
boxplot(iris$Petal.Length ~ iris$Sepal.Length)
boxplot(iris$Petal.Length)
par(mfrow(1,2))
par(c(1,2))
par(c(1,2))
par(mfrow = c(1,2))
boxplot(iris$Petal.Length)
boxplot(iris$Sepal.Length)
ggplot(iris, aes(x= Petal.Length, y= Sepal.Length, col = Species)) + geom_point()
boxplot(iris$Petal.Length, col = Species)
boxplot(iris$Petal.Length, col = iris$Species)
ggplot(iris, aes(x= Petal.Length, y= Sepal.Length, col = Species)) + geom_point()
ggplot(iris, aes(x= Petal.Length, y= Petal.Width, col = Species)) + geom_point()
ggplot(iris, aes(x= Petal.Length, y= Petal.Width, col = Species)) + geom_point(shape = 1)
ggplot(iris, aes(x= Petal.Length, y= Petal.Width, col = Species)) + geom_point(shape = 5)
ggplot(iris, aes(x= Petal.Length, y= Petal.Width, col = Species)) + geom_point(col = "Red")
ggplot(iris, aes(x= Petal.Length, y= Petal.Width, shape = Species)) + geom_point(col = "Red")
ggplot(iris, aes(x= Petal.Length, y= Petal.Width, size = Species)) + geom_point(col = "Red")
source('C:/Users/keerthana/Downloads/Practice Questions - Visualisation using base package.R')
library(ggplot2)
library(zoo)
ukacc <- data.frame(Seatbelts, date = as.Date(as.yearmon((time(Seatbelts)))))
gplot(ukacc,aes(x = ukacc$date, y = ukacc$drivers), col = "black", size = 1) + geom_line() + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$front), col = "red", size = 1) + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$rear), col = "blue", size = 1)
ggplot(ukacc,aes(x = ukacc$date, y = ukacc$drivers), col = "black", size = 1) + geom_line() + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$front), col = "red", size = 1) + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$rear), col = "blue", size = 1)
ggplot(ukacc,aes(x = ukacc$date, y = ukacc$drivers), col = "black", size = 1, shape = 1) + geom_line() + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$front), col = "red", size = 1, shape =1) + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$rear), col = "blue", size = 1, shape = 1)
gg <- ggplot(ukacc,aes(x = ukacc$date, y = ukacc$drivers), col = "black", size = 1) + geom_line() + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$front), col = "red", size = 1) + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$rear), col = "blue", size = 1)
gg+ layer(geom = "line")+geom_vline(xintercept = as.numeric(ukacc$law), linetype= 4, size = 1, alpha = 0.5)
gg <- ggplot(ukacc,aes(x = ukacc$date, y = ukacc$drivers), col = "black", size = 1) + geom_line() + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$front), col = "red", size = 1) + geom_line(data = ukacc,aes(x = ukacc$date, y = ukacc$rear), col = "blue", size = 1) + layer(geom = "line")
sepal_plot <- ggplot(iris, aes(x = Sepal.Length, Sepal.Width, col = Species, size = Petal.Length))
sepal_plot + geom_point()
library(ggplot2)
sepal_plot <- ggplot(iris, aes(x = Sepal.Length, Sepal.Width))
remove_blank <- function(vector){
# store the resulting vector in corrected_vector
# Please enter your code below
v <- c(" ", "" ,"-")
corrected_vector <-replace(v, NA)
#---DO NOT EDIT THE CODE BELOW---#
return(corrected_vector)
}
?replace
v <- c(1,2,3,""," ","-",5,9)
corrected_vector <-replace(v,c(""," ","-"), NA)
corrected_vector <-replace(v,c(, ,-), NA)
corrected_vector <-replace(v,c(4,5,6), NA)
library(stringr)
vector <- c(66,85*,74*,99)
vector <- c("66","85*","74*","99")
v <- vector[which(vector== "%*")] <- ""
v <- vector[which(vector== "%*")] <- 8
v <- vector[which(vector== "%*")]
v <- vector[which(vector== "%9")]
vector[which(vector== "%*")] <- 8
k <- keerthana
k <- c("keerthana")
k[which(k== "%an%")]
k[(k== "%an%")]
k[which(k == %na%)]
k[which(k == %a%)]
k[which(k == %ab)]
phone <- c(9966, 9852 , 9999999)
phone[which(str_length(phone) > 10)] <- NA
phone[which(str_length(phone) > 4)] <- NA
library(stringr)
pla <- c(120 ,30, 134, 16,102)
pl -> pla[which(pla) >= 100]
pl <- pla[which(pla) >= 100]
pl <- pla[which(pla >= 100)]
year(24-05-2016)
?year
?date
date(26-05-2017)
?as.Date
m1 = lm(mpg~., data = mtcars)
summary(m1)
mtcars$random_var = sample(1:100, nrow(mtcars), replace = T)
m2 = lm(mpg~., data = mtcars)
summary(m2)
hc = hclust(mtcars, method = “complete”),
hc = hclust(mtcars, method = complete),
hc = hclust(dist(mtcars), method = "complete"),
hc = hclust(dist(mtcars), method = "complete")
hc = hclust(mtcars, method = "complete")
install.packages("MASS")
install.packages("car")
install.packages("e1071")
install.packages("caret", dependencies = c("Depends", "Suggests"))
library(MASS)
library(car)
library(e1071)
library(caret)
library(ggplot2)
library(cowplot)
library(caTools)
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("recommenderlab")
#Loading Libraries
library(recommenderlab)
#Loading Libraries
install.packages("installr")
library(installr)
setwd("C:/Users/keerthana/Desktop/DA Assignments/PROJECT/validation")
df2<-read_csv("databases_profile_user.csv")
df1<-read_csv("domain_user_profile.csv")
df3<-read_csv("frameworks_profile_user.csv")
df4<-read_csv("languages_profile_user.csv")
df5<-read_csv("platforms_profile_user.csv")
df2<-read.csv("databases_profile_user.csv")
df1<-read.csv("domain_user_profile.csv")
df3<-read.csv("frameworks_profile_user.csv")
df4<-read.csv("languages_profile_user.csv")
df5<-read.csv("platforms_profile_user.csv")
df<-merge(df1,df2)
df<-merge(df,df3)
df<-merge(df1,df2)
df<-merge(df,df4)
df<-merge(df,df5)
View(df)
df<-merge(df1,df2)
View(df)
df<-merge(df,df3)
View(df)
df<-merge(df1,df2)
df6<-merge(df1,df3)
View(df6)
View(df3)
df<-merge(df1,df2)
View(df)
df6<-merge(df3,df4)
View(df6)
View(df3)
View(df4)
df6<-merge(df3,df5)
df7<-merge(df,df6)
View(df)
View(df)
View(df6)
View(df7)
